/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createRootRoute } from '@tanstack/react-router'

import { Route as SoporteRouteImport } from './routes/soporte'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as PerfilRouteImport } from './routes/perfil'
import { Route as OrganizadoresRouteImport } from './routes/organizadores'
import { Route as NotificacionesRouteImport } from './routes/notificaciones'
import { Route as NeweventRouteImport } from './routes/newevent'
import { Route as LoginRouteImport } from './routes/login'
import { Route as HomeRouteImport } from './routes/home'
import { Route as ChatsRouteImport } from './routes/chats'
import { Route as CalendarioRouteImport } from './routes/calendario'
import { Route as AboutRouteImport } from './routes/about'
import { Route as GenericRouteImport } from './routes/Generic'
import { Route as EventDetailRouteImport } from './routes/EventDetail'
import { Route as AcordeRouteImport } from './routes/Acorde'
import { Route as AboutUsRouteImport } from './routes/AboutUs'
import { Route as IndexRouteImport } from './routes/index'

const rootRouteImport = createRootRoute()

const SoporteRoute = SoporteRouteImport.update({
  id: '/soporte',
  path: '/soporte',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const PerfilRoute = PerfilRouteImport.update({
  id: '/perfil',
  path: '/perfil',
  getParentRoute: () => rootRouteImport,
} as any)
const OrganizadoresRoute = OrganizadoresRouteImport.update({
  id: '/organizadores',
  path: '/organizadores',
  getParentRoute: () => rootRouteImport,
} as any)
const NotificacionesRoute = NotificacionesRouteImport.update({
  id: '/notificaciones',
  path: '/notificaciones',
  getParentRoute: () => rootRouteImport,
} as any)
const NeweventRoute = NeweventRouteImport.update({
  id: '/newevent',
  path: '/newevent',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeRoute = HomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatsRoute = ChatsRouteImport.update({
  id: '/chats',
  path: '/chats',
  getParentRoute: () => rootRouteImport,
} as any)
const CalendarioRoute = CalendarioRouteImport.update({
  id: '/calendario',
  path: '/calendario',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const GenericRoute = GenericRouteImport.update({
  id: '/Generic',
  path: '/Generic',
  getParentRoute: () => rootRouteImport,
} as any)
const EventDetailRoute = EventDetailRouteImport.update({
  id: '/EventDetail',
  path: '/EventDetail',
  getParentRoute: () => rootRouteImport,
} as any)
const AcordeRoute = AcordeRouteImport.update({
  id: '/Acorde',
  path: '/Acorde',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutUsRoute = AboutUsRouteImport.update({
  id: '/AboutUs',
  path: '/AboutUs',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/AboutUs': typeof AboutUsRoute
  '/Acorde': typeof AcordeRoute
  '/EventDetail': typeof EventDetailRoute
  '/Generic': typeof GenericRoute
  '/about': typeof AboutRoute
  '/calendario': typeof CalendarioRoute
  '/chats': typeof ChatsRoute
  '/home': typeof HomeRoute
  '/login': typeof LoginRoute
  '/newevent': typeof NeweventRoute
  '/notificaciones': typeof NotificacionesRoute
  '/organizadores': typeof OrganizadoresRoute
  '/perfil': typeof PerfilRoute
  '/register': typeof RegisterRoute
  '/soporte': typeof SoporteRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/AboutUs': typeof AboutUsRoute
  '/Acorde': typeof AcordeRoute
  '/EventDetail': typeof EventDetailRoute
  '/Generic': typeof GenericRoute
  '/about': typeof AboutRoute
  '/calendario': typeof CalendarioRoute
  '/chats': typeof ChatsRoute
  '/home': typeof HomeRoute
  '/login': typeof LoginRoute
  '/newevent': typeof NeweventRoute
  '/notificaciones': typeof NotificacionesRoute
  '/organizadores': typeof OrganizadoresRoute
  '/perfil': typeof PerfilRoute
  '/register': typeof RegisterRoute
  '/soporte': typeof SoporteRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/AboutUs': typeof AboutUsRoute
  '/Acorde': typeof AcordeRoute
  '/EventDetail': typeof EventDetailRoute
  '/Generic': typeof GenericRoute
  '/about': typeof AboutRoute
  '/calendario': typeof CalendarioRoute
  '/chats': typeof ChatsRoute
  '/home': typeof HomeRoute
  '/login': typeof LoginRoute
  '/newevent': typeof NeweventRoute
  '/notificaciones': typeof NotificacionesRoute
  '/organizadores': typeof OrganizadoresRoute
  '/perfil': typeof PerfilRoute
  '/register': typeof RegisterRoute
  '/soporte': typeof SoporteRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/AboutUs'
    | '/Acorde'
    | '/EventDetail'
    | '/Generic'
    | '/about'
    | '/calendario'
    | '/chats'
    | '/home'
    | '/login'
    | '/newevent'
    | '/notificaciones'
    | '/organizadores'
    | '/perfil'
    | '/register'
    | '/soporte'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/AboutUs'
    | '/Acorde'
    | '/EventDetail'
    | '/Generic'
    | '/about'
    | '/calendario'
    | '/chats'
    | '/home'
    | '/login'
    | '/newevent'
    | '/notificaciones'
    | '/organizadores'
    | '/perfil'
    | '/register'
    | '/soporte'
  id:
    | '__root__'
    | '/'
    | '/AboutUs'
    | '/Acorde'
    | '/EventDetail'
    | '/Generic'
    | '/about'
    | '/calendario'
    | '/chats'
    | '/home'
    | '/login'
    | '/newevent'
    | '/notificaciones'
    | '/organizadores'
    | '/perfil'
    | '/register'
    | '/soporte'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutUsRoute: typeof AboutUsRoute
  AcordeRoute: typeof AcordeRoute
  EventDetailRoute: typeof EventDetailRoute
  GenericRoute: typeof GenericRoute
  AboutRoute: typeof AboutRoute
  CalendarioRoute: typeof CalendarioRoute
  ChatsRoute: typeof ChatsRoute
  HomeRoute: typeof HomeRoute
  LoginRoute: typeof LoginRoute
  NeweventRoute: typeof NeweventRoute
  NotificacionesRoute: typeof NotificacionesRoute
  OrganizadoresRoute: typeof OrganizadoresRoute
  PerfilRoute: typeof PerfilRoute
  RegisterRoute: typeof RegisterRoute
  SoporteRoute: typeof SoporteRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/soporte': {
      id: '/soporte'
      path: '/soporte'
      fullPath: '/soporte'
      preLoaderRoute: typeof SoporteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/perfil': {
      id: '/perfil'
      path: '/perfil'
      fullPath: '/perfil'
      preLoaderRoute: typeof PerfilRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/organizadores': {
      id: '/organizadores'
      path: '/organizadores'
      fullPath: '/organizadores'
      preLoaderRoute: typeof OrganizadoresRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/notificaciones': {
      id: '/notificaciones'
      path: '/notificaciones'
      fullPath: '/notificaciones'
      preLoaderRoute: typeof NotificacionesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/newevent': {
      id: '/newevent'
      path: '/newevent'
      fullPath: '/newevent'
      preLoaderRoute: typeof NeweventRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chats': {
      id: '/chats'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof ChatsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/calendario': {
      id: '/calendario'
      path: '/calendario'
      fullPath: '/calendario'
      preLoaderRoute: typeof CalendarioRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Generic': {
      id: '/Generic'
      path: '/Generic'
      fullPath: '/Generic'
      preLoaderRoute: typeof GenericRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/EventDetail': {
      id: '/EventDetail'
      path: '/EventDetail'
      fullPath: '/EventDetail'
      preLoaderRoute: typeof EventDetailRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Acorde': {
      id: '/Acorde'
      path: '/Acorde'
      fullPath: '/Acorde'
      preLoaderRoute: typeof AcordeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/AboutUs': {
      id: '/AboutUs'
      path: '/AboutUs'
      fullPath: '/AboutUs'
      preLoaderRoute: typeof AboutUsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutUsRoute: AboutUsRoute,
  AcordeRoute: AcordeRoute,
  EventDetailRoute: EventDetailRoute,
  GenericRoute: GenericRoute,
  AboutRoute: AboutRoute,
  CalendarioRoute: CalendarioRoute,
  ChatsRoute: ChatsRoute,
  HomeRoute: HomeRoute,
  LoginRoute: LoginRoute,
  NeweventRoute: NeweventRoute,
  NotificacionesRoute: NotificacionesRoute,
  OrganizadoresRoute: OrganizadoresRoute,
  PerfilRoute: PerfilRoute,
  RegisterRoute: RegisterRoute,
  SoporteRoute: SoporteRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
